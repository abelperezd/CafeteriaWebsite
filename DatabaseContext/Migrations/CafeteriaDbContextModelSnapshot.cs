// <auto-generated />
using System;
using CafeteriaWebsite.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CafeteriaWebsite.DatabaseContext.Migrations
{
    [DbContext(typeof(CafeteriaDbContext))]
    partial class CafeteriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CafeteriaWebsite.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 2",
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Category 3"
                        });
                });

            modelBuilder.Entity("CafeteriaWebsite.Models.FoodImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodImage");
                });

            modelBuilder.Entity("CafeteriaWebsite.Models.FoodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FoodImageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FoodImageId")
                        .IsUnique()
                        .HasFilter("[FoodImageId] IS NOT NULL");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Food description 1",
                            Name = "Food1",
                            Tags = "[2]"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Food description 2",
                            Name = "Food2",
                            Tags = "[0]"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Food description 3",
                            Name = "Food3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Food description 4",
                            Name = "Food4"
                        });
                });

            modelBuilder.Entity("CafeteriaWebsite.Models.FoodModel", b =>
                {
                    b.HasOne("CafeteriaWebsite.Models.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CafeteriaWebsite.Models.FoodImageModel", "Image")
                        .WithOne()
                        .HasForeignKey("CafeteriaWebsite.Models.FoodModel", "FoodImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
